// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: api/proto/scoring/v1/scoring.proto

package scoringv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExamScore struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExamId         string                 `protobuf:"bytes,2,opt,name=exam_id,json=examId,proto3" json:"exam_id,omitempty"`
	SessionId      string                 `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	StudentId      string                 `protobuf:"bytes,4,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	TotalQuestions int32                  `protobuf:"varint,5,opt,name=total_questions,json=totalQuestions,proto3" json:"total_questions,omitempty"`
	CorrectAnswers int32                  `protobuf:"varint,6,opt,name=correct_answers,json=correctAnswers,proto3" json:"correct_answers,omitempty"`
	WrongAnswers   int32                  `protobuf:"varint,7,opt,name=wrong_answers,json=wrongAnswers,proto3" json:"wrong_answers,omitempty"`
	Unanswered     int32                  `protobuf:"varint,8,opt,name=unanswered,proto3" json:"unanswered,omitempty"`
	Score          float32                `protobuf:"fixed32,9,opt,name=score,proto3" json:"score,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExamScore) Reset() {
	*x = ExamScore{}
	mi := &file_api_proto_scoring_v1_scoring_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamScore) ProtoMessage() {}

func (x *ExamScore) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scoring_v1_scoring_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamScore.ProtoReflect.Descriptor instead.
func (*ExamScore) Descriptor() ([]byte, []int) {
	return file_api_proto_scoring_v1_scoring_proto_rawDescGZIP(), []int{0}
}

func (x *ExamScore) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExamScore) GetExamId() string {
	if x != nil {
		return x.ExamId
	}
	return ""
}

func (x *ExamScore) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ExamScore) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *ExamScore) GetTotalQuestions() int32 {
	if x != nil {
		return x.TotalQuestions
	}
	return 0
}

func (x *ExamScore) GetCorrectAnswers() int32 {
	if x != nil {
		return x.CorrectAnswers
	}
	return 0
}

func (x *ExamScore) GetWrongAnswers() int32 {
	if x != nil {
		return x.WrongAnswers
	}
	return 0
}

func (x *ExamScore) GetUnanswered() int32 {
	if x != nil {
		return x.Unanswered
	}
	return 0
}

func (x *ExamScore) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ExamScore) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type CalculateScoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CalculateScoreRequest) Reset() {
	*x = CalculateScoreRequest{}
	mi := &file_api_proto_scoring_v1_scoring_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateScoreRequest) ProtoMessage() {}

func (x *CalculateScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scoring_v1_scoring_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateScoreRequest.ProtoReflect.Descriptor instead.
func (*CalculateScoreRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_scoring_v1_scoring_proto_rawDescGZIP(), []int{1}
}

func (x *CalculateScoreRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type GetScoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetScoreRequest) Reset() {
	*x = GetScoreRequest{}
	mi := &file_api_proto_scoring_v1_scoring_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScoreRequest) ProtoMessage() {}

func (x *GetScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scoring_v1_scoring_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScoreRequest.ProtoReflect.Descriptor instead.
func (*GetScoreRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_scoring_v1_scoring_proto_rawDescGZIP(), []int{2}
}

func (x *GetScoreRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListScoresRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExamId        string                 `protobuf:"bytes,1,opt,name=exam_id,json=examId,proto3" json:"exam_id,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListScoresRequest) Reset() {
	*x = ListScoresRequest{}
	mi := &file_api_proto_scoring_v1_scoring_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListScoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScoresRequest) ProtoMessage() {}

func (x *ListScoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scoring_v1_scoring_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScoresRequest.ProtoReflect.Descriptor instead.
func (*ListScoresRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_scoring_v1_scoring_proto_rawDescGZIP(), []int{3}
}

func (x *ListScoresRequest) GetExamId() string {
	if x != nil {
		return x.ExamId
	}
	return ""
}

func (x *ListScoresRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListScoresRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListScoresResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scores        []*ExamScore           `protobuf:"bytes,1,rep,name=scores,proto3" json:"scores,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListScoresResponse) Reset() {
	*x = ListScoresResponse{}
	mi := &file_api_proto_scoring_v1_scoring_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListScoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScoresResponse) ProtoMessage() {}

func (x *ListScoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scoring_v1_scoring_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScoresResponse.ProtoReflect.Descriptor instead.
func (*ListScoresResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_scoring_v1_scoring_proto_rawDescGZIP(), []int{4}
}

func (x *ListScoresResponse) GetScores() []*ExamScore {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *ListScoresResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_api_proto_scoring_v1_scoring_proto protoreflect.FileDescriptor

var file_api_proto_scoring_v1_scoring_proto_rawDesc = string([]byte{
	0x0a, 0x22, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xda, 0x02, 0x0a, 0x09, 0x45, 0x78, 0x61, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x65, 0x78, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63,
	0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x72, 0x6f, 0x6e,
	0x67, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x75, 0x6e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x75, 0x6e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x65, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x36,
	0x0a, 0x15, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x68, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x65, 0x78, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x6b, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x63, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x32, 0xef, 0x01, 0x0a, 0x0e, 0x53, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x21, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22,
	0x00, 0x12, 0x40, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1b, 0x2e,
	0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x63, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x12, 0x1d, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x41, 0x70, 0x65, 0x73, 0x4a, 0x73, 0x2f, 0x63, 0x62, 0x74, 0x2d, 0x65, 0x78, 0x61, 0x6d,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_api_proto_scoring_v1_scoring_proto_rawDescOnce sync.Once
	file_api_proto_scoring_v1_scoring_proto_rawDescData []byte
)

func file_api_proto_scoring_v1_scoring_proto_rawDescGZIP() []byte {
	file_api_proto_scoring_v1_scoring_proto_rawDescOnce.Do(func() {
		file_api_proto_scoring_v1_scoring_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_scoring_v1_scoring_proto_rawDesc), len(file_api_proto_scoring_v1_scoring_proto_rawDesc)))
	})
	return file_api_proto_scoring_v1_scoring_proto_rawDescData
}

var file_api_proto_scoring_v1_scoring_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_proto_scoring_v1_scoring_proto_goTypes = []any{
	(*ExamScore)(nil),             // 0: scoring.v1.ExamScore
	(*CalculateScoreRequest)(nil), // 1: scoring.v1.CalculateScoreRequest
	(*GetScoreRequest)(nil),       // 2: scoring.v1.GetScoreRequest
	(*ListScoresRequest)(nil),     // 3: scoring.v1.ListScoresRequest
	(*ListScoresResponse)(nil),    // 4: scoring.v1.ListScoresResponse
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_api_proto_scoring_v1_scoring_proto_depIdxs = []int32{
	5, // 0: scoring.v1.ExamScore.created_at:type_name -> google.protobuf.Timestamp
	0, // 1: scoring.v1.ListScoresResponse.scores:type_name -> scoring.v1.ExamScore
	1, // 2: scoring.v1.ScoringService.CalculateScore:input_type -> scoring.v1.CalculateScoreRequest
	2, // 3: scoring.v1.ScoringService.GetScore:input_type -> scoring.v1.GetScoreRequest
	3, // 4: scoring.v1.ScoringService.ListScores:input_type -> scoring.v1.ListScoresRequest
	0, // 5: scoring.v1.ScoringService.CalculateScore:output_type -> scoring.v1.ExamScore
	0, // 6: scoring.v1.ScoringService.GetScore:output_type -> scoring.v1.ExamScore
	4, // 7: scoring.v1.ScoringService.ListScores:output_type -> scoring.v1.ListScoresResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_proto_scoring_v1_scoring_proto_init() }
func file_api_proto_scoring_v1_scoring_proto_init() {
	if File_api_proto_scoring_v1_scoring_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_scoring_v1_scoring_proto_rawDesc), len(file_api_proto_scoring_v1_scoring_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_scoring_v1_scoring_proto_goTypes,
		DependencyIndexes: file_api_proto_scoring_v1_scoring_proto_depIdxs,
		MessageInfos:      file_api_proto_scoring_v1_scoring_proto_msgTypes,
	}.Build()
	File_api_proto_scoring_v1_scoring_proto = out.File
	file_api_proto_scoring_v1_scoring_proto_goTypes = nil
	file_api_proto_scoring_v1_scoring_proto_depIdxs = nil
}
